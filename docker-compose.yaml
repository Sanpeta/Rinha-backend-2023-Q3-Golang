services:
  postgres:
    image: postgres:15
    command: postgres -c 'max_connections=300' -c 'log_error_verbosity=TERSE'
    container_name: postgres_compose_pillbox
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rinha_backend_2023
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5GB"

  api1: # API - Instância 01
    hostname: api1
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_SOURCE=postgresql://postgres:postgres@postgres:5432/rinha_backend_2023?sslmode=disable
    depends_on:
      - postgres
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  api2: # API - Instância 02
    hostname: api2
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_SOURCE=postgresql://postgres:postgres@postgres:5432/rinha_backend_2023?sslmode=disable
    depends_on:
      - postgres
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999" # Nginx expõe a porta 9999
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

networks:
  app-network:
    driver: bridge
